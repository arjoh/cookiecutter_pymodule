import os
import subprocess
from urllib.parse import urlparse
from pathlib import Path

from cookiecutter import __version__ as cookiecutter_version

if "{{ cookiecutter.use_argparse }}".lower() != "y":
    os.remove(Path("{{ cookiecutter.project_slug }}", "__main__.py"))

try:
    url = urlparse("{{cookiecutter._template}}")
    _template_is_url = all([url.scheme, url.netloc])
except AttributeError:
    _template_is_url = False

if _template_is_url:
    template = "<{{cookiecutter._template}}>"
else:
    template = "{{cookiecutter._template}}"

generated_message = (
    f"Generated by Cookiecutter {cookiecutter_version}, "
    f"using template: {template}"
)

with open("README.md", "a") as readme:
    readme.write(f"{generated_message}\n")


if "{{ cookiecutter.init_git }}".lower() == "y":
    subprocess.call(["git", "init"])
    subprocess.call(["git", "add", "."])
    subprocess.call(
        [
            "git",
            "commit",
            "-am",
            generated_message,
        ]
    )
